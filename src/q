Help on class Environment in module dm_env._environment:

class EEnnvviirroonnmmeenntt(builtins.object)
 |  Abstract base class for Python RL environments.
 |  
 |  Observations and valid actions are described with `Array` specs, defined in
 |  the `specs` module.
 |  
 |  Methods defined here:
 |  
 |  ____eenntteerr____(self)
 |      Allows the environment to be used in a with-statement context.
 |  
 |  ____eexxiitt____(self, exc_type, exc_value, traceback)
 |      Allows the environment to be used in a with-statement context.
 |  
 |  aaccttiioonn__ssppeecc(self)
 |      Defines the actions that should be provided to `step`.
 |      
 |      May use a subclass of `specs.Array` that specifies additional properties
 |      such as min and max bounds on the values.
 |      
 |      Returns:
 |        An `Array` spec, or a nested dict, list or tuple of `Array` specs.
 |  
 |  cclloossee(self)
 |      Frees any resources used by the environment.
 |      
 |      Implement this method for an environment backed by an external process.
 |      
 |      This method can be used directly
 |      
 |      ```python
 |      env = Env(...)
 |      # Use env.
 |      env.close()
 |      ```
 |      
 |      or via a context manager
 |      
 |      ```python
 |      with Env(...) as env:
 |        # Use env.
 |      ```
 |  
 |  ddiissccoouunntt__ssppeecc(self)
 |      Describes the discount returned by the environment.
 |      
 |      By default this is assumed to be a single float between 0 and 1.
 |      
 |      Returns:
 |        An `Array` spec, or a nested dict, list or tuple of `Array` specs.
 |  
 |  oobbsseerrvvaattiioonn__ssppeecc(self)
 |      Defines the observations provided by the environment.
 |      
 |      May use a subclass of `specs.Array` that specifies additional properties
 |      such as min and max bounds on the values.
 |      
 |      Returns:
 |        An `Array` spec, or a nested dict, list or tuple of `Array` specs.
 |  
 |  rreesseett(self) -> dm_env._environment.TimeStep
 |      Starts a new sequence and returns the first `TimeStep` of this sequence.
 |      
 |      Returns:
 |        A `TimeStep` namedtuple containing:
 |          step_type: A `StepType` of `FIRST`.
 |          reward: `None`, indicating the reward is undefined.
 |          discount: `None`, indicating the discount is undefined.
 |          observation: A NumPy array, or a nested dict, list or tuple of arrays.
 |            Scalar values that can be cast to NumPy arrays (e.g. Python floats)
 |            are also valid in place of a scalar array. Must conform to the
 |            specification returned by `observation_spec()`.
 |  
 |  rreewwaarrdd__ssppeecc(self)
 |      Describes the reward returned by the environment.
 |      
 |      By default this is assumed to be a single float.
 |      
 |      Returns:
 |        An `Array` spec, or a nested dict, list or tuple of `Array` specs.
 |  
 |  sstteepp(self, action) -> dm_env._environment.TimeStep
 |      Updates the environment according to the action and returns a `TimeStep`.
 |      
 |      If the environment returned a `TimeStep` with `StepType.LAST` at the
 |      previous step, this call to `step` will start a new sequence and `action`
 |      will be ignored.
 |      
 |      This method will also start a new sequence if called after the environment
 |      has been constructed and `reset` has not been called. Again, in this case
 |      `action` will be ignored.
 |      
 |      Args:
 |        action: A NumPy array, or a nested dict, list or tuple of arrays
 |          corresponding to `action_spec()`.
 |      
 |      Returns:
 |        A `TimeStep` namedtuple containing:
 |          step_type: A `StepType` value.
 |          reward: Reward at this timestep, or None if step_type is
 |            `StepType.FIRST`. Must conform to the specification returned by
 |            `reward_spec()`.
 |          discount: A discount in the range [0, 1], or None if step_type is
 |            `StepType.FIRST`. Must conform to the specification returned by
 |            `discount_spec()`.
 |          observation: A NumPy array, or a nested dict, list or tuple of arrays.
 |            Scalar values that can be cast to NumPy arrays (e.g. Python floats)
 |            are also valid in place of a scalar array. Must conform to the
 |            specification returned by `observation_spec()`.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  ____ddiicctt____
 |      dictionary for instance variables (if defined)
 |  
 |  ____wweeaakkrreeff____
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  ____aabbssttrraaccttmmeetthhooddss____ = frozenset({'action_spec', 'observation_spec', 'r...
